@import './colors';
@import './grid.scss';
@import './theme';

$divider-color: $white-a-70;
$divider-size: 3px;

$logo-size: 1.75rem;

$player-height: 200px;
$player-gap: 10px;
$player-corner-radius: 10px;
$player-padding: 20px;
$player-text-color: $white;

$player-thumbnail-size--mobile: 65px;
$player-thumbnail-size: 135px;

// TODO: Move to background module.
$background-tint-color: $black-a-50;
$background-blur: 30px;

:export {
  --divider-color: #{$divider-color};
  --divider-size: #{$divider-size};

  --player-text-color: #{$player-text-color};
  --player-thumbnail-size--mobile: #{$player-thumbnail-size--mobile};
  --player-thumbnail-size: #{$player-thumbnail-size};

  // TODO: Move to background module.
  --background-tint-color: #{$background-tint-color};
  --background-blur: #{$background-blur};
}

.container {
  @include lightTheme {
    --divider-color: #{$black-a-10};

    --player-text-color: #{$black};

    // TODO: Move to background module.
    --background-tint-color: #{$white-a-90};

    // IconButton
    --iconButton-background-color--hover: #{$black-a-10};
    --iconButton-outline-color--focus: #{$black-a-10};
    --iconButton-color: #{$black-a-60};
    --iconButton-color--promote: #{$black-a-80};
    --iconButton-color--hover: #{$black};
    --iconButton-color--focus: #{$black};

    // Playlist
    --playlist-text-color: #{$grey-400};
    --playlist-text-color--active: #{$black};
    --playlist-background-color: #{$grey-100};
    --playlist-divider-color: #{$black-a-10};
    --playlist-header-text-color: #{$black};

    // PlayerProgress
    --playerProgress-progress-color: #{$secondary-500};
    --playerProgress-handle-color: #{$white-a-50};
    --playerProgress-track-color: #{$black-a-10};

    // Modal
    --modal-background-color: #{$white-a-90};
  }

  display: grid;
  align-content: center;
  width: 100vw;
  height: 100vh;

  touch-action: manipulation;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: hsl(0 0% 0% / 0);
}

.main {
  position: relative;
  display: grid;
  grid-template-rows: $player-height;
  grid-auto-rows: 1fr;
  width: 100vw;
  overflow: hidden;

  margin-inline: auto;

  border-radius: $player-corner-radius;

  &.withCoverArt {
    $cover-size: min(100vh - $player-height, 100vw);
    width: $cover-size;
    grid-template-rows: $cover-size $player-height;
  }

  &.withPlaylist {
    height: 100vh;
  }

  &.withCoverArt,
  &.withPlaylist {
    border-radius: 0;
  }
}

.coverArt {
  display: grid;
}

.playerContainer {
  @include grid-stacked;

  .withCoverArt &,
  .withPlaylist & {
    position: relative;
    overflow: hidden;

    &::before,
    &::after {
      position: absolute;
      width: 100%;
      height: var(--divider-size);
      z-index: 1;

      background-color: var(--divider-color);
    }
  }

  .withCoverArt & {
    &::before {
      content: '';
      top: 0;
    }
  }

  .withPlaylist & {
    &::after {
      content: '';
      bottom: 0;
    }
  }
}

.background {
  @include grid-stacked;
  position: relative;
  z-index: -1;
  overflow: hidden;

  &::after {
    content: '';
    z-index: 1;
    background-color: var(--background-tint-color);
    backdrop-filter: blur($background-blur);
  }
}

.playerMain {
  --player-thumbnail-size: #{$player-thumbnail-size--mobile};

  display: grid;
  grid-template-columns: var(--player-thumbnail-size) 1fr max-content;
  grid-template-rows: max-content 1fr max-content;
  grid-template-areas:
    'THUMB TEXT  LOGO'
    'PANEL PANEL PANEL'
    'PROG  PROG  PROG';
  align-content: stretch;
  gap: $player-gap;
  padding: $player-padding;

  color: var(--player-text-color);

  .withCoverArt & {
    grid-template-areas:
      'TEXT  TEXT  LOGO'
      'PANEL PANEL PANEL'
      'PROG  PROG  PROG';
  }
}

.thumbnail {
  grid-area: THUMB;

  display: grid;
  width: var(--player-thumbnail-size);
  height: var(--player-thumbnail-size);
}

.text {
  grid-area: TEXT;
}

.logo {
  display: none;
  grid-area: LOGO;
  align-self: start;

  & > svg {
    width: 80px;
    display: inline-block;
    vertical-align: -webkit-baseline-middle;
    fill: var(--logo-color, currentColor);
  }
}

.panel {
  grid-area: PANEL;
  align-self: center;

  display: grid;
  justify-content: center;
  align-items: center;
  gap: $player-gap;

  line-height: 0;

  --iconButton-size: clamp(20px, 12vw, 40px);
  --playButton-size: clamp(40px, 20vw, 60px);
}

.controls {
  display: flex;
  align-items: center;
  gap: 5px;

  &.menuShown {
    display: none;
  }
}

.menu {
  grid-area: MENU;

  display: none;
  align-items: center;
  gap: 5px;

  font-size: 1rem;

  &.menuShown {
    display: flex;
  }
}

.menuToggle {
  grid-area: LOGO;
}

.progress {
  grid-area: PROG;
}

.playlist {
  overflow: hidden;
}

.modalMenu {
  display: flex;
  align-items: center;
  gap: 5px;
}

@media only screen and (min-width: #{640px - $player-thumbnail-size}) {
  .main.withCoverArt {
    .text {
      gap: $player-gap;
    }

    .logo {
      display: block;
    }

    .panel {
      display: flex;
      justify-content: space-between;
    }

    .controls {
      &.menuShown {
        display: block;
      }
    }

    .menu {
      display: flex;
    }

    .menuToggle {
      display: none;
    }
  }
}

@media only screen and (min-width: 640px) {
  .playerMain {
    --player-thumbnail-size: #{$player-thumbnail-size};

    grid-template-areas:
      'THUMB TEXT  LOGO'
      'THUMB PANEL PANEL'
      'PROG  PROG  PROG';
  }

  .text {
    gap: $player-gap;
  }

  .logo {
    display: block;
  }

  .panel {
    display: flex;
    justify-content: space-between;
  }

  .controls {
    &.menuShown {
      display: block;
    }
  }

  .menu {
    display: flex;
  }

  .menuToggle {
    display: none;
  }
}
