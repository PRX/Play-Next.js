@use 'sass:color';

@import './colors';
@import './grid.scss';

$divider-color: $white-a-70;
$divider-size: 3px;

$logo-size: 1.75rem;

$player-height: 200px;
$player-gap: 10px;
$player-corner-radius: 10px;
$player-padding: 20px;
$player-text-color: $white;

$playerThumbnail-size--mobile: 65px;
$playerThumbnail-size: 135px;

// TODO: Move to background module.
$background-tint-color: hsl(0 0% 0%);
$background-tint-alpha: 0.5;
$background-blur: 30px;

:export {
  --divider-color: #{$divider-color};
  --divider-size: #{$divider-size};

  --playerThumbnail-size--mobile: #{$playerThumbnail-size--mobile};
  --playerThumbnail-size: #{$playerThumbnail-size};

  // TODO: Move to background module.
  --background-tint-alpha: #{$background-tint-alpha};
  --background-blur: #{$background-blur};
}

.container {
  display: grid;
  align-content: center;
  width: 100vw;
  height: 100vh;

  touch-action: manipulation;
  -webkit-font-smoothing: antialiased;
  -webkit-tap-highlight-color: hsl(0 0% 0% / 0);
}

.main {
  display: grid;
  grid-template-rows: $player-height;
  grid-auto-rows: 1fr;
  width: 100vw;

  margin-inline: auto;

  &.withCoverArt {
    $cover-size: min(100vh - $player-height, 100vw);
    width: $cover-size;
    grid-template-rows: $cover-size $player-height;
  }

  &.withPlaylist {
    height: 100vh;
  }
}

.coverArt {
  display: grid;
}

.playerContainer {
  @include grid-stacked;

  .withCoverArt &,
  .withPlaylist & {
    position: relative;
    overflow: hidden;

    &::before,
    &::after {
      position: absolute;
      width: 100%;
      height: $divider-size;
      z-index: 1;

      background-color: $divider-color;
    }
  }

  .withCoverArt & {
    &::before {
      content: '';
      top: 0;
    }
  }

  .withPlaylist & {
    &::after {
      content: '';
      bottom: 0;
    }
  }
}

.background {
  @include grid-stacked;
  position: relative;
  z-index: -1;
  overflow: hidden;

  border-radius: $player-corner-radius;
  &::after {
    $h: color.hue($background-tint-color);
    $s: color.saturation($background-tint-color);
    $l: color.lightness($background-tint-color);
    content: '';
    z-index: 1;
    background-color: hsl($h, $s, $l, $background-tint-alpha);
    backdrop-filter: blur($background-blur);
  }

  .withCoverArt &,
  .withPlaylist & {
    border-radius: 0;
  }
}

.playerMain {
  --playerThumbnail-size: #{$playerThumbnail-size--mobile};

  display: grid;
  grid-template-columns: var(--playerThumbnail-size) 1fr max-content;
  grid-template-rows: max-content 1fr max-content;
  grid-template-areas:
    'THUMB TEXT  TEXT'
    'PANEL PANEL PANEL'
    'PROG  PROG  PROG';
  align-content: stretch;
  gap: $player-gap;
  padding: $player-padding;

  color: $player-text-color;

  .withCoverArt & {
    grid-template-areas:
      'TEXT  TEXT  TEXT'
      'PANEL PANEL PANEL'
      'PROG  PROG  PROG';
  }
}

.thumbnail {
  grid-area: THUMB;

  display: grid;
  width: var(--playerThumbnail-size);
  height: var(--playerThumbnail-size);
}

.text {
  grid-area: TEXT;

  display: grid;
  gap: $player-gap / 2;
}

.logo {
  display: none;
  grid-area: LOGO;
  align-self: start;
}

.logoPrx {
  width: 80px;
  display: inline-block;
  vertical-align: -webkit-baseline-middle;
}

.panel {
  grid-area: PANEL;
  align-self: center;

  display: grid;
  grid-template-columns: 1fr max-content;
  grid-template-areas: 'CTRLS MTOG';
  align-items: center;
  gap: $player-gap;

  line-height: 0;
}

.controls {
  grid-area: CTRLS;

  display: flex;
  align-items: center;
  gap: 5px;

  &.menuShown {
    display: none;
  }
}

.menu {
  grid-area: CTRLS;

  display: none;
  align-items: center;
  gap: 5px;

  font-size: 1rem;

  &.menuShown {
    display: flex;
  }
}

.menuToggle {
  grid-area: MTOG;
}

.progress {
  grid-area: PROG;
}

.playlist {
  overflow: hidden;
}

@media only screen and (min-width: 500px) {
  .playerMain {
    --playerThumbnail-size: #{$playerThumbnail-size};

    grid-template-areas:
      'THUMB TEXT  LOGO'
      'THUMB PANEL PANEL'
      'PROG  PROG  PROG';

    .withCoverArt & {
      grid-template-areas:
        'TEXT  TEXT  LOGO'
        'PANEL PANEL PANEL'
        'PROG  PROG  PROG';
    }
  }

  .text {
    gap: $player-gap;
  }

  .logo {
    display: block;
  }

  .panel {
    grid-template-areas: 'CTRLS MENU';
  }

  .controls {
    &.menuShown {
      display: block;
    }
  }

  .menu {
    display: flex;
    grid-area: MENU;
  }

  .menuToggle {
    display: none;
  }
}
